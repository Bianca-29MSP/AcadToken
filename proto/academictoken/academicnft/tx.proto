syntax = "proto3";

package academictoken.academicnft;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "academictoken/academicnft/params.proto";

option go_package = "github.com/Bianca-29MSP/AcademicToken/x/academicnft/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams       (MsgUpdateParams      ) returns (MsgUpdateParamsResponse      );
  rpc MintCourseNft      (MsgMintCourseNft     ) returns (MsgMintCourseNftResponse     );
  rpc TransferCourseNft  (MsgTransferCourseNft ) returns (MsgTransferCourseNftResponse );
  rpc ApproveEquivalence (MsgApproveEquivalence) returns (MsgApproveEquivalenceResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                                   "authority";
  option           (amino.name) = "academictoken/x/academicnft/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgMintCourseNft {
  option (cosmos.msg.v1.signer) = "creator";
           string creator                   =  1;
           string courseId                  =  2;
           string institution               =  3;
           string title                     =  4;
           string code                      =  5;
           uint64 workloadHours             =  6;
           uint64 credits                   =  7;
           string description               =  8;
  repeated string objectives                =  9;
  repeated string topicUnits                = 10;
  repeated string methodologies             = 11;
  repeated string evaluationMethods         = 12;
  repeated string bibliographyBasic         = 13;
  repeated string bibliographyComplementary = 14;
  repeated string keywords                  = 15;
           string contentHash               = 16;
}

message MsgMintCourseNftResponse {}

message MsgTransferCourseNft {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string nftId     = 2;
  string recipient = 3;
}

message MsgTransferCourseNftResponse {}

message MsgApproveEquivalence {
  option (cosmos.msg.v1.signer) = "creator";
  string creator       = 1;
  string nftId1        = 2;
  string nftId2        = 3;
  string score         = 4;
  string justification = 5;
}

message MsgApproveEquivalenceResponse {}

